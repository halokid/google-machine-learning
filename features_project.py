#! coding=utf-8

'''
特征工程
实际上所谓的 特征工程， 就是把 我们手上原有的 测试数据， 转化为 一些 标准化的 特征数据， 以便机器更好
的去学习，  更好的训练数据模型

从原始数据 到 特征矢量


有一些特征数据是 可以 直接复制 实值的， 这些叫  实值特征

'''

#实值特征
num_rooms = {"num_rooms": 6}

#上面的实值 可以直接 转化 为特征
num_rooms_features = [6.0]




#二元矢量， 假如我们现在要获取 某一个 特定的特征字符， 比如这个特征字符是 a， 那么除了 a 之后的 b, c, d, e 所有字符 我们都可以
#为它们设置一个 一样的特征值， 而 a 自己有一个固定的特征值
a_features = 1
other_features = 0

#上面只有 两个 特征数值


#枚举分类特征值

s = {'a', 'b', 'c'}
a_features = 0
b_features = 1
c_features = 2



'''
我们要做的是， 怎样才能认定某一个数据特征 是一个良好的 数据特征，这个很重要， 其实机器学习 数据才是主要关注的东西，

编程不是主要关注的东西

良好的数据有下面的特点：
1.  避免很少使用的 离散特征值
2.  不要将“神奇”的值与实际数据混为一谈
3. 考虑上游不稳定性



要根据我们实际做的机器学习的项目， 而设置良好的 特征数据， 这个要靠一些准则和经验才能精进的
'''



'''
特征组合的种类
我们可以创建很多不同种类的特征组合。例如：

[A X B]：将两个特征的值相乘形成的特征组合。
[A x B x C x D x E]：将五个特征的值相乘形成的特征组合。
[A x A]：对单个特征的值求平方形成的特征组合。


特征数据整理建议采用分箱方式，因为这样可以让模型了解单个特征内的非线性关系。不过，一个城市存在于多个维度上；因此，要了解特定于城市的关系，需要对纬度与经度进行组合。
'''















